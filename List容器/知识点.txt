06 List双向链表
由一系列的节点组成，包含两个域，一个数据域一个指针域。
1.链表内存是非连续的。好处：添加删除元素时间复杂度都是常数项，不需要移动其他元素，效率比数组高
2.链表只有在需要时才分配内存。
3.数组不需要额外内存保存地址。链表需要***额外空间开销***保存地址！
4.不支持随机访问！
5.链表拿到第一个节点，相当于拿到整个链表。

常用基本方法需牢记，具体查询API文档：
push_front()头部插入节点
pop_front()头部删除节点
push_back()尾部插入节点
pop_back()尾部删除节点

begin()返回头节点迭代器 list<int>::iterator it1 = l.begin();  迭代器
end()返回尾节点迭代器 list<int>::iterator it1 = l.end();

remove()删除节点（按内容）
erase()删除一个左开右闭区间的节点（按地址）
clear()清空链表

insert()插入节点

大小操作
size()、empty()、resize()

reverse()元素反转8

sort()排序方法
***注意！该sort()是list自己提供的独立成员方法！因为list不支持随机存取访问。
而<algorithm>中的sort算法均为*可随机访问的容器*进行排序，可提高排序效率。